<?php
/**
 * Email:zhaojunlike@gmail.com
 * Date: 7/8/2017
 * Time: 5:28 PM
 */

namespace app\index\controller;


use app\common\cache\AuthCache;
use app\common\model\BbsCategory;
use app\common\model\FriendLinks;
use function Couchbase\defaultDecoder;
use oeynet\addCaptcha\CaptchaHelper;
use think\captcha\Captcha;
use think\Config;
use think\Controller;

class Base extends Controller
{
    protected $page_limit = 50;
    protected $mUser = null;
    protected $mAuthMenu = null;
    protected $friendLinks = [];
    protected $category = null;


    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $total = [
            'current_viewer' => 100,
            'login_count' => 10,
            'current_online' => 100,
            'user_count' => 1123123,
            'today_post_count' => 123,
            'post_count' => 123123,
        ];
        $this->page_limit = Config::get('WEB_INDEX_PAGE_LIMIT');
        $this->assign('_total', $total);
        $this->initFriendLinks();
        $this->initCategory();
    }


    protected function initCategory()
    {
        $data = BbsCategory::where(['status' => 1])->order('sort ASC')->select();
        $this->assign('_category', $data);
        $this->assign('category', ['id' => 0]);
    }

    protected function initFriendLinks()
    {
        $data = FriendLinks::where(['status' => 1])->order('sort ASC')->select();
        $this->assign('_friend_links', $data);
    }


    /**
     * Email:zhaojunlike@gmail.com
     * @param int $type
     * @return bool
     */
    protected function checkVerify($type = 1)
    {
        switch ($type) {
            case 1:
                $captcha = new Captcha();
                $verify_code = $this->request->post("verify_code", null, "trim");
                if (!$captcha->check($verify_code, 1) && Config::get('app_debug') !== true) {
                    return false;
                }
                break;
            case 2:
                $captcha = new CaptchaHelper();
                $verify_code = $this->request->post("verify_code", null, "trim");
                if (!$captcha->check($verify_code, 1) && Config::get('app_debug') !== true) {
                    return false;
                }
                break;
                break;
            default:
                $captcha = new Captcha();
                $verify_code = $this->request->post("verify_code", null, "trim");
                if (!$captcha->check($verify_code, 1) && Config::get('app_debug') !== true) {
                    return false;
                }
                break;
                break;
        }
        return true;
    }
}